<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>demo on braveheat.xyz</title><link>https://www.braveheart.xyz/tags/demo/</link><description>Recent content in demo on braveheat.xyz</description><generator>Hugo -- gohugo.io</generator><language>zh</language><lastBuildDate>Sun, 15 May 2022 18:59:59 +0800</lastBuildDate><atom:link href="https://www.braveheart.xyz/tags/demo/index.xml" rel="self" type="application/rss+xml"/><item><title>使用Milvus搭建一个古诗词搜索引擎</title><link>https://www.braveheart.xyz/journals/chinese-poetry-search-with-milvus/</link><pubDate>Sun, 15 May 2022 18:59:59 +0800</pubDate><guid>https://www.braveheart.xyz/journals/chinese-poetry-search-with-milvus/</guid><description>作为熟悉向量数据库的一部分，这两天自己手写了一个 demo。Milvus 本身提供了很多不错的例子，但我还是想自己从头做一个。本文是开发过程的记录，心急的可以直接去看完整的项目代码。
准备工作 需要以下软件：
docker 和 docker-compose，用于部署 Milvus sqlite3，用于存储向量之外的数据 Python 3.7 或以上版本 torch 和 transformers，用于 BERT 模型 bottle，用于开发一个简单 Web 查询服务 pymilvus，Milvus 的 Python SDK milvus-cli，Milvus 命令行工具 首先需要部署 Milvus 服务。由于数据量不是很大，因此使用 standealone 模式部署一个单节点服务就可以满足需求。下载 milvus-standalone-docker-compose.yaml 文件到部署目录，然后执行如下命令启动服务：
docker-compose up -d 服务启动后 Milvus 的数据会存储在当前目录下的 volumes 子目录里，要确保有足够的存储空间。
也可以顺便部署一个 Milvus 的 Web 前端 Attu：
docker run -p 8000:3000 -e HOST_URL=http://{ your machine IP }:8000 -e MILVUS_URL={your machine IP}:19530 zilliz/attu:latest 接下来用 pip 安装需要的 Python 库和工具：</description></item></channel></rss>